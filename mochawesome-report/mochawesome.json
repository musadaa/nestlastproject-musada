{
  "stats": {
    "suites": 4,
    "tests": 12,
    "passes": 9,
    "pending": 0,
    "failures": 3,
    "start": "2023-02-13T12:15:13.734Z",
    "end": "2023-02-13T12:15:24.474Z",
    "duration": 10740,
    "testsRegistered": 12,
    "passPercent": 75,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "64246595-0c55-47d6-9d16-89e1adbc1f73",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "59fa4d4c-2c65-4f06-9ed4-a6e56b3333a0",
          "title": "createbook",
          "fullFile": "/Users/musadarahmah/learn/nestlastproject-musada/test/scenario/createbook.test.js",
          "file": "/test/scenario/createbook.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Successfull create booking",
              "fullTitle": "createbook Successfull create booking",
              "timedOut": false,
              "duration": 1293,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await bookerApi.createBook(data.VALID_BOOKCREATE);\nassert.equal(response.status, 200)",
              "err": {},
              "uuid": "2f6292ec-e479-4bdf-95a9-41adf103686e",
              "parentUUID": "59fa4d4c-2c65-4f06-9ed4-a6e56b3333a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Name must be string",
              "fullTitle": "createbook Name must be string",
              "timedOut": false,
              "duration": 795,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let nama = data.INVALIDSTRING_BOOKCREATE.firstname;\n const response = await bookerApi.createBook(data.INVALIDSTRING_BOOKCREATE.string);\n assert.isNotString(nama, \"Name must be string\")",
              "err": {},
              "uuid": "d3677def-19cb-4cb3-a0c2-565ee2a2bfb1",
              "parentUUID": "59fa4d4c-2c65-4f06-9ed4-a6e56b3333a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Integer must be number",
              "fullTitle": "createbook Integer must be number",
              "timedOut": false,
              "duration": 775,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let price = data.INVALIDNUMBER_BOOKCREATE.totalprice;\n const response = await bookerApi.createBook(data.INVALIDNUMBER_BOOKCREATE);\n assert.isNotNumber(price, \"Total Price must be number\")",
              "err": {},
              "uuid": "958dbac1-048a-44ed-a8c2-1ca1cd8dcbf0",
              "parentUUID": "59fa4d4c-2c65-4f06-9ed4-a6e56b3333a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Date format must be true",
              "fullTitle": "createbook Date format must be true",
              "timedOut": false,
              "duration": 838,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let date = data.INVALIDSTRING_BOOKCREATE.bookingdates;\n const response = await bookerApi.createBook(data.INVALIDDATE_BOOKCREATE);",
              "err": {},
              "uuid": "37b997d7-9b6b-457a-a9cd-9b761eea2789",
              "parentUUID": "59fa4d4c-2c65-4f06-9ed4-a6e56b3333a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Boolean must be true or false not \"true\" or \"false\" ",
              "fullTitle": "createbook Boolean must be true or false not \"true\" or \"false\" ",
              "timedOut": false,
              "duration": 777,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let deposit = data.INVALIDSTRING_BOOKCREATE.depositpaid;\n const response = await bookerApi.createBook(data.INVALIDBOOLEAN_BOOKCREATE);\n assert.isBoolean(deposit, \"Deposit must be true or false\")",
              "err": {},
              "uuid": "fdf870fb-8d43-4a99-9df6-c45cc3327a81",
              "parentUUID": "59fa4d4c-2c65-4f06-9ed4-a6e56b3333a0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2f6292ec-e479-4bdf-95a9-41adf103686e",
            "d3677def-19cb-4cb3-a0c2-565ee2a2bfb1",
            "958dbac1-048a-44ed-a8c2-1ca1cd8dcbf0",
            "37b997d7-9b6b-457a-a9cd-9b761eea2789",
            "fdf870fb-8d43-4a99-9df6-c45cc3327a81"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4478,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f54b8437-7a48-4a5a-b188-3607eb314bc0",
          "title": "getdetailbook",
          "fullFile": "/Users/musadarahmah/learn/nestlastproject-musada/test/scenario/getdetail.test.js",
          "file": "/test/scenario/getdetail.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Successfull Get detail booking by id",
              "fullTitle": "getdetailbook Successfull Get detail booking by id",
              "timedOut": false,
              "duration": 804,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let param = data.VALID_DETAIL_BOOK.id;\nconst response = await bookerApi.getDetailBook(param);\nassert.equal(response.status, 200)",
              "err": {},
              "uuid": "e3d23528-7b4c-4355-a384-9d6a28336d1e",
              "parentUUID": "f54b8437-7a48-4a5a-b188-3607eb314bc0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Failed Get detail booking by id use string",
              "fullTitle": "getdetailbook Failed Get detail booking by id use string",
              "timedOut": false,
              "duration": 810,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let param = data.INVALID_DETAIL_IDSTRING.id;\nconst response = await bookerApi.getDetailBook(param);\n    \nassert.equal(response.status, 404)",
              "err": {},
              "uuid": "07e4f809-04d4-4703-858a-40e40451b877",
              "parentUUID": "f54b8437-7a48-4a5a-b188-3607eb314bc0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Failed Get detail booking by id use string",
              "fullTitle": "getdetailbook Failed Get detail booking by id use string",
              "timedOut": false,
              "duration": 808,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let param = data.INVALID_DETAIL_IDBOOLEAN.id;\nconst response = await bookerApi.getDetailBook(param);\n    \nassert.equal(response.status, 404)",
              "err": {},
              "uuid": "74e3cb09-4f30-4a3c-a20b-03052de35042",
              "parentUUID": "f54b8437-7a48-4a5a-b188-3607eb314bc0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e3d23528-7b4c-4355-a384-9d6a28336d1e",
            "07e4f809-04d4-4703-858a-40e40451b877",
            "74e3cb09-4f30-4a3c-a20b-03052de35042"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2422,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ddbc95f0-d6fa-4545-9c76-a7b55a33db51",
          "title": "getlistbook",
          "fullFile": "/Users/musadarahmah/learn/nestlastproject-musada/test/scenario/getlistbook.test.js",
          "file": "/test/scenario/getlistbook.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Successfull get list booking",
              "fullTitle": "getlistbook Successfull get list booking",
              "timedOut": false,
              "duration": 1307,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await bookerApi.getListBook();\nassert.equal(response.status, 200)",
              "err": {},
              "uuid": "daccd3bc-8995-42be-a72e-0417340ae6f1",
              "parentUUID": "ddbc95f0-d6fa-4545-9c76-a7b55a33db51",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "daccd3bc-8995-42be-a72e-0417340ae6f1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1307,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "64f5f5da-442c-43f4-a95f-a04c3b8db8d2",
          "title": "updateBook",
          "fullFile": "/Users/musadarahmah/learn/nestlastproject-musada/test/scenario/updatebook.test.js",
          "file": "/test/scenario/updatebook.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Successfull update booking data in id 1",
              "fullTitle": "updateBook Successfull update booking data in id 1",
              "timedOut": false,
              "duration": 804,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let param = data.VALID_UPDATE.id;\nconst response = await bookerApi.updateBook(data.VALID_UPDATE);\nassert.equal(response.status, 200)",
              "err": {
                "message": "AssertionError: expected 405 to equal 200",
                "estack": "AssertionError: expected 405 to equal 200\n    at Context.<anonymous> (file:///Users/musadarahmah/learn/nestlastproject-musada/test/scenario/updatebook.test.js:11:16)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- 405\n+ 200\n"
              },
              "uuid": "547713b8-30b2-4f2e-93d4-2ff0fa6737e4",
              "parentUUID": "64f5f5da-442c-43f4-a95f-a04c3b8db8d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Failed update booking data input firstname 1",
              "fullTitle": "updateBook Failed update booking data input firstname 1",
              "timedOut": false,
              "duration": 814,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let param = data.INVALID_UPDATE_NOSTRING.id;\nconst response = await bookerApi.updateBook(data.INVALID_UPDATE_NOSTRING);\nassert.equal(response.status, 400)",
              "err": {
                "message": "AssertionError: expected 405 to equal 400",
                "estack": "AssertionError: expected 405 to equal 400\n    at Context.<anonymous> (file:///Users/musadarahmah/learn/nestlastproject-musada/test/scenario/updatebook.test.js:18:16)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- 405\n+ 400\n"
              },
              "uuid": "1b774a5a-8aef-474e-ad6d-6ec2a8911a17",
              "parentUUID": "64f5f5da-442c-43f4-a95f-a04c3b8db8d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Failed update booking data input firstname 1",
              "fullTitle": "updateBook Failed update booking data input firstname 1",
              "timedOut": false,
              "duration": 887,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let param = data.INVALID_UPDATE_NONUMBER.id;\nconst response = await bookerApi.updateBook(data.INVALID_UPDATE_NONUMBER);\nassert.equal(response.status, 400)",
              "err": {
                "message": "AssertionError: expected 405 to equal 400",
                "estack": "AssertionError: expected 405 to equal 400\n    at Context.<anonymous> (file:///Users/musadarahmah/learn/nestlastproject-musada/test/scenario/updatebook.test.js:25:16)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- 405\n+ 400\n"
              },
              "uuid": "53570609-51fb-4b87-a91a-af69ac686e71",
              "parentUUID": "64f5f5da-442c-43f4-a95f-a04c3b8db8d2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "547713b8-30b2-4f2e-93d4-2ff0fa6737e4",
            "1b774a5a-8aef-474e-ad6d-6ec2a8911a17",
            "53570609-51fb-4b87-a91a-af69ac686e71"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2505,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}